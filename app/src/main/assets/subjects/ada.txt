UNIT I:  Introduction
<b>1.1 Introduction</b>
<br> 1.1.1 Algorithm Definitions                                                                                      
<br> 1.1.2 Fundamentals of algorithm problem solving 
<br> 1.1.3 The efficiency of algorithms
<br> 1.1.4 Best, Average and worst case analysis
<br><br><b>1.2. Methodologies for Analyzing  algorithm</b>
<br> 1.2.1 Pseudo code
<br> 1.2.2 Counting the primitive operations
<br> 1.2.3 Algorithm Complexities
<br>   1.2.3.1 Space Complexity
<br>    1.2.3.1.1 Analysis of space complexity
<br>    1.2.3.1.2 How to calculate Space complexity?
<br>   1.2.3.2 Time Complexity 
<br><br><b>1.3. Asymptotic Notations</b>                                                              
<br> 1.3.1 The Big-oh Notation
<br> 1.3.2 The Big-omega Notation
<br> 1.3.3 The big-theta notation
<br> 1.3.4 Ordering functions by their Growth rates
<br><br><b>[12 Hrs] [33 Marks] </b>

UNIT II: Graphs  Optimization Problems
<b>2.1 Graphs</b>
<br> 2.1.1 Definitions and Representations
<br> 2.1.2 Different types of graph
<br> 2.1.3 Searching Methods: DFS and BFS
<br> 2.1.4 Introduction to Trees
<br> 2.1.5 Applications  
<br><br><b>2.2 Optimization Problems</b>
<br> 2.2.1 Feasible Solutions
<br> 2.2.2 Optimal Solutions
<br> 2.2.3 Important problem types: Sorting, Searching, string processing, graph problems, combinatorial problems, Geometric problems, Numeric problems.
<br><br><b>[08 Hrs] [22 Marks] </b>

UNIT III: Brute Force method
<b>3.1 Selection Sort
<br>3.2 Bubble Sort
<br>3.3 Sequential Search
<br>3.4 Exhaustive Search</b>
<br> 3.4.1 Travelling Salesman problem
<br> 3.4.2 0/1 Knapsack Problem
<br><br><b>[06 Hrs] [17 Marks] </b>

UNIT IV: Divide and Conquer, Decrease and Conquer
<b>4.1.  Divide and Conquer</b>
<br> 4.1.1 Merge Sort
<br> 4.1.2 Quick Sort
<br> 4.1.3 Strassen’s Matrix Multiplication
<br><br><b>4.2.Decrease and Conquer</b>                                                                        
<br> 4.2.1 Insertion Sort
<br>  4.2.1.1 Analysis of Insertion sort
<br>  4.2.1.2 Implementation
<br> 4.2.2 Topological Sorting
<br><br><b>[10 Hrs] [28 Marks] </b>

UNIT V: Dynamic Programming, Greedy Technique
<b>5.1 Dynamic Programming</b>
<br> 5.1.1 Warshall’s algorithm
<br> 5.1.2 Floyd’s Algorithm
<br> 5.1.3 0/1 Knapsack problem
<br><br><b>5.2 Greedy Technique</b>
<br> 5.2.1 Prim’s Algorithm
<br> 5.2.2 Kruskal’s Algorithm
<br> 5.3.3 Dijikstra’s Algorithm
<br><br><b>[06 Hrs] [20 Marks] </b>

UNIT VI: Backtracking , Branch and Bound
<b>6.1 Backtracking</b>
<br> 6.1.1 The method
<br> 6.1.2 Explicit and Implicit constraints
<br> 6.1.3 Solution Space
<br> 6.1.4 n-queens problem
<br> 6.1.5 Travelling Salesman problem 
<br><br><b>6.2 Branch and Bound </b>
<br> 6.2.1 Traveling Salesman problem
<br><br><b>[06 Hrs] [17 Marks] </b>

<b>Text books:</b>
<br><br>1.	Algorithms Design by Michael T.Good Rich and Roberto Tamassia, WILEY INDIA EDITION 2009
<br>2.  Introduction to the design and Analysis of Algorithms by Anany Levitin
<br>3.  Analysis And Design of Algorithms by Nandagopalan, Sapna Publications

<br><br><b>Reference Books:</b>
<br><br>1. Fundamentals of computer Algorithms by Ellis Horowitz  Sartaj Sahani Sanguthevar Rajasekaran.
<br>2. Design and Analysis of Algorithm by prabhakar gupta,vineet agarwal, monish varshney.
<br>3. Design Methods and Analysis of Algorithms by S.K.Basu by PHI .
<br>4. http://www.personal.kent.edu/~rmuhamma/Algorithms/algorithm.html
<br>5. http://www.slideshare.net/VinayChinnappaReddy/ada-complete-notes

<br><br><b>Suggested Student Activity:</b>

<br><br>1. Implement 4-Queens problem using Back Tracking.
<br>2. Implement 4-Queens problem using Branching and Bounding.
<br>3. Implement Travelling Salesman problem using Back Tracking.
<br>4. Implement Travelling Salesman problem using Greedy Technique
<br>5. Comparative study of all Asymptotic Notations
<br>6. Seminars
<br>7. Quiz etc.

<br><br><b>Note:</b> The activities or similar activities for assessing CIE (IA) for 5 marks (Any one)
<br>1. Each student should do any one of the following type activity or any other similar activity related to the course and before conduction, get it approved from concerned Teacher and HOD.
<br>2. Each student should conduct different activity and no repeating should occur